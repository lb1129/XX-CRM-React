{"version":3,"file":"static/js/330.c177f4e7.chunk.js","mappings":"8JA0CA,IAjCuB,SAACA,GACtB,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACR,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,KAAM,CACJC,QAAO,SAACC,GACNN,EAAKO,eAAeD,EAAKE,IAC3B,EACAC,aAAc,CAACT,EAAKU,UACpBC,MAAO,CACL,CACEC,MAAO,UACPJ,IAAK,MAEP,CACEI,MAAO,eACPJ,IAAK,WAGTK,UAEFX,EAAAA,EAAAA,KAAA,QACEY,UAAWf,EAAMe,UACjBC,MAAO,CACLC,SAAU,QACVH,UAEFX,EAAAA,EAAAA,KAACe,EAAAA,EAAc,OAIvB,C,oECrCaC,EAAe,WAAH,OACvBC,EAAAA,EAAAA,IAAc,SAAAC,GAAgB,IAAbC,EAAKD,EAALC,MACf,MAAO,CACLC,MAAM,GAADC,OAAKF,EAAMG,kBAChB,WAAY,CACVF,MAAM,GAADC,OAAKF,EAAMI,yBAElB,UAAW,CACTH,MAAM,GAADC,OAAKF,EAAMK,wBAGtB,GAAE,C,6ECLSP,EAAgB,SAACQ,GAC5B,IAAMN,EAAQO,EAAAA,EAAAA,WACd,OAAOC,EAAAA,EAAAA,IAAIF,EAAMN,GACnB,C,iFCVe,SAASS,IACtB,MAAO,CACLC,MAAMZ,EAAAA,EAAAA,IAAc,SAAAC,GAAQ,MAAQ,CAClCY,UAAW,OACXC,gBAF0Bb,EAALC,MAEEa,cACvBC,cAAe,OAChB,IACDC,QAAQjB,EAAAA,EAAAA,IAAc,iBAAO,CAC3BkB,OAAQ,OACRC,WAAY,OACZC,UAAW,QACXC,aAAc,OACdC,aAAc,OACf,IACDC,OAAOvB,EAAAA,EAAAA,IAAc,iBAAO,CAC1BH,SAAU,OACV2B,WAAY,IACZJ,UAAW,SACZ,IACDK,MAAMzB,EAAAA,EAAAA,IAAc,SAAA0B,GAAQ,MAAQ,CAClCvB,MAD0BuB,EAALxB,MACRyB,qBACbC,UAAW,OACXN,aAAc,OACdF,UAAW,SACZ,IACDS,MAAM7B,EAAAA,EAAAA,IAAc,iBAAO,CACzB8B,MAAO,QACPC,OAAQ,SACT,IACDC,QAAQhC,EAAAA,EAAAA,IAAc,SAAAiC,GAAQ,MAAQ,CACpCb,UAAW,SACXW,OAAQ,cACR,WAAY,CACV5B,MAJ0B8B,EAAL/B,MAIRyB,sBAEhB,IAEL,C,qGCPA,UAvB+B,SAAC/C,GAC9B,IAAQsD,GAAMpD,EAAAA,EAAAA,MAANoD,EACFC,GAASC,EAAAA,EAAAA,WACTC,EAAaC,SACnB,OACEC,EAAAA,EAAAA,MAAA,OAAK5C,UAAWwC,EAAOvB,KAAKlB,SAAA,EAC1BX,EAAAA,EAAAA,KAAA,OAAKY,UAAWwC,EAAOlB,OAAOvB,UAC5BX,EAAAA,EAAAA,KAACyD,EAAAA,EAAc,OAEjBzD,EAAAA,EAAAA,KAAA,OAAKY,UAAWwC,EAAOZ,MAAM7B,SAAE2C,KAC/BtD,EAAAA,EAAAA,KAAA,OAAKY,UAAWwC,EAAOV,KAAK/B,SAAEwC,EAAE,aAAc,CAAEO,KAAMJ,OACtDtD,EAAAA,EAAAA,KAAA,OAAKY,UAAWwC,EAAON,KAAKnC,SAAEd,EAAMc,YACpC6C,EAAAA,EAAAA,MAAA,OAAK5C,UAAWwC,EAAOH,OAAOtC,SAAA,CAAC,uBACX4C,UAClBvD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAO,CAACC,KAAK,cACd5D,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACC,GAAG,iBAAiBC,OAAO,SAAQpD,SACtCwC,EAAE,wBAKb,C,sLCuEA,UA9F2B,WACzB,IAAQa,EAAiBC,EAAAA,EAAAA,SAAjBD,aACFE,GAAWC,EAAAA,EAAAA,MACThB,GAAMpD,EAAAA,EAAAA,MAANoD,EACFiB,GAAYpD,EAAAA,EAAAA,KACZqD,EAAQ,eAAAnD,GAAAoD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAMvB,OAAAH,EAAAA,EAAAA,KAAA1C,MAAA,SAAA8C,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACCb,EAAac,QAAQ,CACnBC,QAAS5B,EAAE,oBACX6B,YAAa7B,EAAE,0BACf8B,SAAU,IACVC,UAAW,OAEbC,YAAW,WACTjB,EAAS,SACX,GAAG,MAAK,wBAAAS,EAAAS,OAAA,GAAAX,EAAA,KACT,gBAhBaY,GAAA,OAAAnE,EAAAoE,MAAA,KAAAC,UAAA,KAkBd,OACEvF,EAAAA,EAAAA,KAACwF,EAAAA,QAAM,CAAA7E,UACL6C,EAAAA,EAAAA,MAACiC,EAAAA,EAAI,CAACC,KAAK,QAAQrB,SAAUA,EAAS1D,SAAA,EACpCX,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CACR/B,KAAK,WACLiC,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS5B,EAAU,wBAAyBxC,UAEtEX,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CAACC,YAAa3C,EAAU,gBAEhCnD,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CACR/B,KAAK,WACLiC,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS5B,EAAU,yBAA0BxC,UAEvEX,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CAACjC,KAAK,WAAWkC,YAAa3C,EAAU,iBAEhDnD,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CACR/B,KAAK,kBACLiC,MAAO,CACL,CACEC,UAAU,EACVb,QAAS5B,EAAU,wBAErB,SAAAR,GAAA,IAAGoD,EAAapD,EAAboD,cAAa,MAAQ,CACtBC,UAAS,SAACC,EAAMC,GACd,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAOjD,EAAE,2BAFfgD,QAAQE,SAGnB,EACD,GACD1F,UAEFX,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CAACjC,KAAK,WAAWkC,YAAa3C,EAAU,wBAEhDnD,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CACR/B,KAAK,QACLiC,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS5B,EAAU,6BAA8BxC,UAE3EX,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CAACC,YAAa3C,EAAU,qBAGhCK,EAAAA,EAAAA,MAAC8C,EAAAA,EAAG,CAACC,OAAQ,GAAG5F,SAAA,EACdX,EAAAA,EAAAA,KAACwG,EAAAA,EAAG,CAACC,KAAK,KAAI9F,UACZX,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CACR/B,KAAK,OACLiC,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS5B,EAAU,iCAAkCxC,UAE/EX,EAAAA,EAAAA,KAAC6F,EAAAA,EAAK,CAACC,YAAa3C,EAAU,2BAGlCnD,EAAAA,EAAAA,KAACwG,EAAAA,EAAG,CAACC,KAAK,IAAG9F,UACXX,EAAAA,EAAAA,KAAC0G,EAAAA,GAAM,CAACC,OAAK,EAAAhG,SAAEwC,EAAE,+BAIrBnD,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CAAA9E,UACRX,EAAAA,EAAAA,KAAC6D,EAAAA,GAAI,CAACjD,UAAWwD,EAAWN,GAAG,SAAQnD,SACpCwC,EAAE,sBAIPnD,EAAAA,EAAAA,KAACyF,EAAAA,EAAAA,KAAS,CAAA9E,UACRX,EAAAA,EAAAA,KAAC0G,EAAAA,GAAM,CAAC9C,KAAK,UAAU+C,OAAK,EAACC,SAAS,SAAQjG,SAC3CwC,EAAE,oBAMf,C,oCClGA,IAAeqD,EAAG,C,qCCAlB,IAAeF,EAAG,C","sources":["components/ToggleLanguage/index.tsx","hooks/common-style.ts","utils/useEmotionCss.ts","views/authenticate/Layout.style.ts","views/authenticate/Layout.tsx","views/authenticate/Register.tsx","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React from 'react'\nimport { Dropdown } from 'antd'\nimport { GlobalOutlined } from '@ant-design/icons'\nimport { useTranslation } from 'react-i18next'\n\ntype Props = {\n  className?: string\n}\n\nconst ToggleLanguage = (props: Props) => {\n  const { i18n } = useTranslation()\n  return (\n    <Dropdown\n      menu={{\n        onClick(info) {\n          i18n.changeLanguage(info.key)\n        },\n        selectedKeys: [i18n.language],\n        items: [\n          {\n            label: 'English',\n            key: 'en'\n          },\n          {\n            label: '中文',\n            key: 'zh-CN'\n          }\n        ]\n      }}\n    >\n      <span\n        className={props.className}\n        style={{\n          fontSize: '16px'\n        }}\n      >\n        <GlobalOutlined />\n      </span>\n    </Dropdown>\n  )\n}\n\nexport default ToggleLanguage\n","import { useEmotionCss } from '@/utils/useEmotionCss'\n\n// link css-in-js 通用\nexport const useLinkStyle = () =>\n  useEmotionCss(({ token }) => {\n    return {\n      color: `${token.colorPrimaryText}`,\n      '&:active': {\n        color: `${token.colorPrimaryTextActive}`\n      },\n      '&:hover': {\n        color: `${token.colorPrimaryTextHover}`\n      }\n    }\n  })\n\n// ...\n","import { css, CSSInterpolation } from '@emotion/css'\nimport { theme } from 'antd'\n\nexport type { CSSInterpolation } from '@emotion/css'\n\nexport type Theme = ReturnType<typeof theme.useToken>\n\nexport type cssFunction = (token: Theme) => CSSInterpolation | Array<CSSInterpolation>\n\nexport const useEmotionCss = (cssFn: cssFunction) => {\n  const token = theme.useToken()\n  return css(cssFn(token))\n}\n","import { useEmotionCss } from '@/utils/useEmotionCss'\n\nexport default function useIndexStyles() {\n  return {\n    wrap: useEmotionCss(({ token }) => ({\n      minHeight: '100%',\n      backgroundColor: token.colorBgLayout,\n      paddingBottom: '24px'\n    })),\n    header: useEmotionCss(() => ({\n      height: '40px',\n      lineHeight: '40px',\n      textAlign: 'right',\n      paddingRight: '24px',\n      marginBottom: '32px'\n    })),\n    title: useEmotionCss(() => ({\n      fontSize: '33px',\n      fontWeight: 600,\n      textAlign: 'center'\n    })),\n    desc: useEmotionCss(({ token }) => ({\n      color: token.colorTextDescription,\n      marginTop: '12px',\n      marginBottom: '40px',\n      textAlign: 'center'\n    })),\n    main: useEmotionCss(() => ({\n      width: '368px',\n      margin: '0 auto'\n    })),\n    footer: useEmotionCss(({ token }) => ({\n      textAlign: 'center',\n      margin: '48px 0 24px',\n      '&, & > a': {\n        color: token.colorTextDescription\n      }\n    }))\n  }\n}\n","import React, { type ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Divider } from 'antd'\nimport { useTranslation } from 'react-i18next'\nimport ToggleLanguage from '@/components/ToggleLanguage'\nimport useStyles from './Layout.style'\n\ntype Props = { children: ReactElement }\n\nconst Index: React.FC<Props> = (props) => {\n  const { t } = useTranslation()\n  const styles = useStyles()\n  const systemName = process.env.REACT_APP_SYSTEM_NAME\n  return (\n    <div className={styles.wrap}>\n      <div className={styles.header}>\n        <ToggleLanguage />\n      </div>\n      <div className={styles.title}>{systemName}</div>\n      <div className={styles.desc}>{t('systemDesc', { name: systemName })}</div>\n      <div className={styles.main}>{props.children}</div>\n      <div className={styles.footer}>\n        Copyright © 2023 {process.env.REACT_APP_SYSTEM_NAME}\n        <Divider type=\"vertical\" />\n        <Link to=\"/privacyPolicy\" target=\"_blank\">\n          {t('privacyPolicy')}\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport { Button, Form, Input, App, Row, Col } from 'antd'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useLinkStyle } from '@/hooks/common-style'\nimport Layout from './Layout'\n\nconst Register: React.FC = () => {\n  const { notification } = App.useApp()\n  const navigate = useNavigate()\n  const { t } = useTranslation()\n  const linkStyle = useLinkStyle()\n  const onFinish = async (values: {\n    userName: string\n    password: string\n    confirmPassword: string\n    phone: number\n    code: number\n  }) => {\n    notification.success({\n      message: t('signUpSuccessful'),\n      description: t('jumpToTheLoginPageSoon'),\n      duration: 1.5,\n      closeIcon: null\n    })\n    setTimeout(() => {\n      navigate('/login')\n    }, 1500)\n  }\n\n  return (\n    <Layout>\n      <Form size=\"large\" onFinish={onFinish}>\n        <Form.Item\n          name=\"userName\"\n          rules={[{ required: true, message: t<string>('pleaseEnterAccount') }]}\n        >\n          <Input placeholder={t<string>('account')} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: t<string>('pleaseEnterPassword') }]}\n        >\n          <Input type=\"password\" placeholder={t<string>('password')} />\n        </Form.Item>\n        <Form.Item\n          name=\"confirmPassword\"\n          rules={[\n            {\n              required: true,\n              message: t<string>('pleaseEnterPassword')\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve()\n                }\n                return Promise.reject(t('twoPasswordsDoNotMatch'))\n              }\n            })\n          ]}\n        >\n          <Input type=\"password\" placeholder={t<string>('confirmPassword')} />\n        </Form.Item>\n        <Form.Item\n          name=\"phone\"\n          rules={[{ required: true, message: t<string>('pleaseEnterMobileNumber') }]}\n        >\n          <Input placeholder={t<string>('mobileNumber')} />\n        </Form.Item>\n\n        <Row gutter={16}>\n          <Col span=\"16\">\n            <Form.Item\n              name=\"code\"\n              rules={[{ required: true, message: t<string>('pleaseEnterVerificationCode') }]}\n            >\n              <Input placeholder={t<string>('verificationCode')}></Input>\n            </Form.Item>\n          </Col>\n          <Col span=\"8\">\n            <Button block>{t('getVerificationCode')}</Button>\n          </Col>\n        </Row>\n\n        <Form.Item>\n          <Link className={linkStyle} to=\"/login\">\n            {t('haveAnAccount')}\n          </Link>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" block htmlType=\"submit\">\n            {t('register')}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Layout>\n  )\n}\n\nexport default Register\n","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;"],"names":["props","i18n","useTranslation","_jsx","Dropdown","menu","onClick","info","changeLanguage","key","selectedKeys","language","items","label","children","className","style","fontSize","GlobalOutlined","useLinkStyle","useEmotionCss","_ref","token","color","concat","colorPrimaryText","colorPrimaryTextActive","colorPrimaryTextHover","cssFn","theme","css","useIndexStyles","wrap","minHeight","backgroundColor","colorBgLayout","paddingBottom","header","height","lineHeight","textAlign","paddingRight","marginBottom","title","fontWeight","desc","_ref2","colorTextDescription","marginTop","main","width","margin","footer","_ref3","t","styles","useStyles","systemName","process","_jsxs","ToggleLanguage","name","Divider","type","Link","to","target","notification","App","navigate","useNavigate","linkStyle","onFinish","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_context","prev","next","success","message","description","duration","closeIcon","setTimeout","stop","_x","apply","arguments","Layout","Form","size","rules","required","Input","placeholder","getFieldValue","validator","rule","value","Promise","reject","resolve","Row","gutter","Col","span","Button","block","htmlType"],"sourceRoot":""}