{"version":3,"file":"static/js/492.f8ace182.chunk.js","mappings":"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","sources":["hooks/resize-height.ts","utils/useEmotionCss.ts","components/PositionMap/style/index.ts","components/PositionMap/index.tsx","views/Home.tsx"],"sourcesContent":["import { useState, useLayoutEffect, useRef, type RefObject } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nfunction useResizeHeight(ref: RefObject<HTMLElement>, minusHeight?: number) {\n  const [height, setHeight] = useState(0)\n  const ro = useRef<ResizeObserver>()\n\n  useLayoutEffect(() => {\n    const node = ref.current\n    if (node) {\n      // 先解除已有监听\n      if (ro.current) ro.current.unobserve(node)\n      ro.current = new ResizeObserver((entries) => {\n        setHeight(entries[0].contentRect.height - (minusHeight ?? 0))\n      })\n      ro.current.observe(node)\n    }\n    return () => {\n      // 卸载解除已有监听\n      if (node) ro.current?.unobserve(node)\n    }\n  }, [ref, minusHeight])\n\n  return { height }\n}\n\nexport { useResizeHeight }\n","import { css, CSSInterpolation } from '@emotion/css'\nimport { theme } from 'antd'\n\nexport type { CSSInterpolation } from '@emotion/css'\n\nexport type Theme = ReturnType<typeof theme.useToken>\n\nexport type cssFunction = (token: Theme) => CSSInterpolation | Array<CSSInterpolation>\n\nexport const useEmotionCss = (cssFn: cssFunction) => {\n  const token = theme.useToken()\n  return css(cssFn(token))\n}\n","import { useEmotionCss } from '@/utils/useEmotionCss'\nimport { injectGlobal } from '@emotion/css'\n\ninjectGlobal({\n  '.tangram-suggestion-main': {\n    zIndex: 5,\n    overflow: 'hidden auto'\n  }\n})\n\nexport default function useStyles() {\n  return {\n    wrap: useEmotionCss(() => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    })),\n    content: useEmotionCss(() => ({\n      width: '100%',\n      height: '100%'\n    })),\n    searchInput: useEmotionCss(({ token }) => ({\n      position: 'absolute',\n      top: '20px',\n      left: '20px',\n      zIndex: 5,\n      width: '30%',\n      padding: '4px 11px',\n      border: '1px solid #d9d9d9',\n      borderRadius: '2px',\n      outline: 'none',\n      transition: 'all 0.3s',\n      '&:hover': {\n        borderColor: token.colorPrimary,\n        borderRightWidth: '1px !important'\n      }\n    })),\n    searchResult: useEmotionCss(() => ({\n      position: 'absolute',\n      top: '52px',\n      left: '20px',\n      zIndex: 5,\n      width: '30%',\n      overflow: 'hidden auto'\n    }))\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport { useResizeHeight } from '@/hooks/resize-height'\nimport useStyles from './style'\nimport { useTranslation } from 'react-i18next'\n\nexport interface PositionInfo {\n  province: string\n  city: string\n  address: string\n  point: {\n    lng: number\n    lat: number\n  }\n}\n\ntype Props = {\n  onChange?: (record: PositionInfo) => void\n}\n\nconst PositionMap = (props: Props) => {\n  const wrapRef = useRef<HTMLDivElement>(null)\n  const nodeRef = useRef<HTMLDivElement>(null)\n  const suggestRef = useRef<HTMLInputElement>(null)\n  const resultRef = useRef<HTMLDivElement>(null)\n  const [suggestionNode, setSuggestionNode] = useState<HTMLElement>()\n  const mapCreated = useRef<boolean>(false)\n  const { height } = useResizeHeight(wrapRef)\n  const styles = useStyles()\n  const distanceBottom = 200\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (suggestionNode) {\n      suggestionNode.style.height = `${height - distanceBottom}px`\n    }\n  }, [height, suggestionNode])\n\n  // 绘制地图\n  useEffect(() => {\n    const nodeRaw = nodeRef.current\n    if (nodeRaw) {\n      if (!mapCreated.current) {\n        mapCreated.current = true\n        const localcity = new BMapGL.LocalCity()\n        localcity.get((e) => {\n          const map = new BMapGL.Map(nodeRaw)\n          const point = new BMapGL.Point(e.center.lng, e.center.lat)\n          map.centerAndZoom(point, 13)\n          map.enableScrollWheelZoom()\n\n          // 添加比例尺控件\n          const scaleControl = new BMapGL.ScaleControl()\n          map.addControl(scaleControl)\n          // 添加缩放控件\n          const zoomControl = new BMapGL.ZoomControl()\n          map.addControl(zoomControl)\n          // 添加定位控件\n          const locationControl = new BMapGL.LocationControl()\n          map.addControl(locationControl)\n          // 添加3D控件\n          const navigationControl3D = new BMapGL.NavigationControl3D()\n          map.addControl(navigationControl3D)\n          // 添加全景地图控件（AK暂无权限）\n          //   const panoramaControl = new BMapGL.PanoramaControl()\n          //   map.addControl(panoramaControl)\n\n          // 关键字提示输入\n          const autocomplete = new BMapGL.Autocomplete({\n            input: suggestRef.current as HTMLInputElement,\n            location: map\n          })\n\n          // 位置检索\n          const localSearch = new BMapGL.LocalSearch(map, {\n            renderOptions: {\n              map: map,\n              panel: resultRef.current as HTMLDivElement\n            }\n          })\n          localSearch.enableAutoViewport()\n          localSearch.disableFirstResultSelection()\n          localSearch.setInfoHtmlSetCallback((e) => {\n            props.onChange &&\n              props.onChange({\n                province: e.province,\n                city: e.city,\n                address: e.address,\n                point: e.point\n              })\n            // 当前查看的位置Mark居中\n            map.panTo(new BMapGL.Point(e.point.lng, e.point.lat))\n          })\n\n          // 关键字提示输入点击后进行位置检索\n          autocomplete.onconfirm = (e) => {\n            suggestRef.current?.blur()\n            const { province, city, district, street, streetNumber, business } = e.item.value\n            localSearch.setLocation(`${province}${city}${district}${street}${streetNumber}`)\n            localSearch.search(business)\n          }\n\n          // autocomplete 无配置获取由BMAP渲染的输入提示列表DOM\n          // 暂时先这样处理获取输入提示列表DOM，然后设置其最大高度，防止内容超出容器\n          setTimeout(() => {\n            // @ts-ignore-next-line\n            const suggestionDomId = autocomplete?._suggestion?.mainId\n            const node = document.getElementById(suggestionDomId)\n            if (node) setSuggestionNode(node)\n          }, 200)\n        })\n      }\n    }\n  }, [props])\n\n  return (\n    <div className={styles.wrap} ref={wrapRef}>\n      <div className={styles.content} ref={nodeRef}></div>\n      <input\n        type=\"text\"\n        placeholder={t<string>('searchLocation')}\n        className={styles.searchInput}\n        ref={suggestRef}\n      />\n      <div\n        className={styles.searchResult}\n        style={{ maxHeight: `${height - distanceBottom}px` }}\n        ref={resultRef}\n      ></div>\n    </div>\n  )\n}\n\nexport default PositionMap\n","import React, { useEffect, createRef } from 'react'\nimport PositionMap from '@/components/PositionMap'\nimport * as echarts from 'echarts/core'\nimport { GridComponent, TooltipComponent } from 'echarts/components'\nimport { BarChart } from 'echarts/charts'\nimport { CanvasRenderer } from 'echarts/renderers'\n// echarts 按需加载使用\necharts.use([GridComponent, TooltipComponent, BarChart, CanvasRenderer])\n\nconst Home: React.FC = () => {\n  const container = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    const node = container.current\n    if (node) {\n      const myChart = echarts.init(node)\n      myChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            axisTick: {\n              alignWithLabel: true\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value'\n          }\n        ],\n        series: [\n          {\n            name: 'Direct',\n            type: 'bar',\n            barWidth: '60%',\n            data: [10, 52, 200, 334, 390, 330, 220]\n          }\n        ]\n      })\n    }\n  }, [container])\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%'\n      }}\n    >\n      <div style={{ flex: 1 }} ref={container}></div>\n      <div style={{ flex: 1 }}>\n        <PositionMap onChange={(record) => {}} />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n"],"names":["useResizeHeight","ref","minusHeight","_useState","useState","_useState2","_slicedToArray","height","setHeight","ro","useRef","useLayoutEffect","node","current","unobserve","ResizeObserver","entries","contentRect","observe","_ro$current","useEmotionCss","cssFn","token","theme","css","injectGlobal","zIndex","overflow","props","wrapRef","nodeRef","suggestRef","resultRef","suggestionNode","setSuggestionNode","mapCreated","styles","wrap","position","width","content","searchInput","_ref","top","left","padding","border","borderRadius","outline","transition","borderColor","colorPrimary","borderRightWidth","searchResult","t","useTranslation","useEffect","style","concat","nodeRaw","BMapGL","LocalCity","get","e","map","Map","point","Point","center","lng","lat","centerAndZoom","enableScrollWheelZoom","scaleControl","ScaleControl","addControl","zoomControl","ZoomControl","locationControl","LocationControl","navigationControl3D","NavigationControl3D","autocomplete","Autocomplete","input","location","localSearch","LocalSearch","renderOptions","panel","enableAutoViewport","disableFirstResultSelection","setInfoHtmlSetCallback","onChange","province","city","address","panTo","onconfirm","_suggestRef$current","blur","_e$item$value","item","value","district","street","streetNumber","business","setLocation","search","setTimeout","_autocomplete$_sugges","suggestionDomId","_suggestion","mainId","document","getElementById","_jsxs","className","children","_jsx","type","placeholder","maxHeight","echarts","GridComponent","TooltipComponent","BarChart","CanvasRenderer","container","createRef","setOption","tooltip","trigger","axisPointer","grid","right","bottom","containLabel","xAxis","data","axisTick","alignWithLabel","yAxis","series","name","barWidth","display","flex","PositionMap","record"],"sourceRoot":""}